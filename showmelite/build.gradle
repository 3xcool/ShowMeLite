apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
//apply plugin: 'kotlin-android-extensions'
//apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'maven-publish'
apply plugin: 'signing'

//apply plugin: 'io.codearte.nexus-staging'

def versionMajor = 2
def versionMinor = 0
def versionPatch = 3

def localProperties = new Properties()
localProperties.load(project.rootProject.file('mylocal.properties').newDataInputStream())

//Maven Central
ext {
    PUBLISH_GROUP_ID = 'com.3xcool'
    PUBLISH_VERSION = "${versionMajor}.${versionMinor}.${versionPatch}"
    PUBLISH_ARTIFACT_ID = 'showmelite'

    repoName = 'sonatype'

    libraryDescription = 'Logger Library'
    libraryUrl = 'https://github.com/3xcool/showmelite'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'

    developerId = '3xcool'
    developerName = 'Andre Filgueiras'
    developerEmail = 'alg.filgueiras@gmail.com'

    gitConnection = 'scm:git:github.com/3xcool/showmelite.git'
    developerConnection = 'scm:git:ssh://github.com/3xcool/showmelite.git'
    scmUrl = 'https://github.com/3xcool/showmelite'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"


    signingConfigs {
        release {
            storeFile rootProject.file('filgs_key.keystore')
            storePassword localProperties.getProperty("signing.password")
            keyAlias localProperties.getProperty("signing.keyAlias")
            keyPassword localProperties.getProperty("signing.password")
        }

        debug {
            storeFile rootProject.file('filgs_key.keystore')
            storePassword localProperties.getProperty("signing.password")
            keyAlias localProperties.getProperty("signing.keyAlias")
            keyPassword localProperties.getProperty("signing.password")
        }
    }

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
//    implementation fileTree(dir: "libs", include: ["*.jar"])
//    implementation 'androidx.appcompat:appcompat:1.2.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}


task deleteJar(type: Delete) {
    delete 'libs/jars/showmelite.jar'
}

////tutorial to create jar: https://stackoverflow.com/questions/21712714/how-to-make-a-jar-out-from-an-android-studio-project
task createJar(type: Copy) {
//    from('build/intermediates/bundles/release/') //don't work
    from('build/intermediates/packaged-classes/release/')
    into('libs/jars/')
    include('classes.jar')
    rename('classes.jar', 'showmelite.jar')
}

createJar.dependsOn(deleteJar, build)

apply from: "${rootProject.projectDir}/publish-mavencentral.gradle"